# 位运算基础
数据在内存中以二进制表示，在一些语言中，整形类型有严格的大小定义
如 INT32 表示占据 4 Bytes 的整数
用最高位为 0 表示数为整数，1 表示负数

正数反码为本身，负数反码为除符号位其余取反
反码是为了方便计算减法 如 1110 + 0001 表示 -1 + 1 
-1 + 1 = 1110 + 0001 = 1111 转为原码 1000 即 1 + -1 = 0

反码带来 0 有两个表示的问题 即 1000 和 0000，为解决这个问题引入补码
正数仍为本身，负数补码是反码最后一位 + 1
1 + -1 = 0001 + 1111 = 0000 将补码 0000 转为源码为 0000
这样 1000 可以表示 -2**3

因此 n+1 位的有符号整数范围为 -2**n ~ 2**n-1
# python 的位运算符号
按位与 &
任何数与1按位与的结果可判断是否奇数
按位或 |

按位异或 ^ 相异为1，相同为0， 0 异或任意数的结果还是任意数

左移 <，任何数左移一位有相当于乘以 2
右移 >，任何数右移一位有相当于对 2 取整

